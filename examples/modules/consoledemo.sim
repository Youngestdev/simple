call simple.utilities.Console 
call simple.core.List

block main()
	obj = new TestObject
	obj1 = new CustomStringObject
	obj2 = new NoToString
	list = new List(["This only for {1} mudule test ignore {0}\n", "Typos", "Console"])
	
	#the stdout
	stdout.println("\tHello World") #string
	stdout.println(1 * 2 + 23 + 65 / 1 * 767) #number
	stdout.println([1,"26",256,"tes", "2354"]) #list
	stdout.println(null) #null
	stdout.println(obj) #object inherit simple.core.Object 
	stdout.println(obj1) #object 1 has a custom toString()
	stdout.println(obj2) #object 2 has no toString() block
	stdout.print("Yes you the boss\n")
	stdout.printfc(ConsoleColor.BLUE()," The string in blue - STD OUT \n")
	stdout.vprintf(["{0} {1} {2} {3} bit {4} of version {5}\n", "Hello", "this", "is", 8 * 8, "simple-lang", getSimpleVersion()])
	
	#the std err
	stderr.println("This is an error")
	stderr.println(1 * 2 + 23 + 65 / 1 * 767) #number
	stderr.println([1,"26",256,"tes", "2354"]) #list
	stderr.println(null) #null
	stderr.print(obj) #object inherit simple.core.Object 
	stderr.print(obj1) #object 1 has a custom toString()
	stderr.println(obj2) #object 2 has no toString() block
	stderr.print("This is an error in print\n")
	stderr.vprintf(list)
	stderr.printfc(ConsoleColor.RED()," The string in red - STD ERR \n")
	
	#global block
	println(stdout, "print with newline Hello World globally")
	print(stdout, "print Hello World globally")
	@_vformatf(["\nJust for {0} console this bracket {a} {} is ignore because it not preceeded by a number ", "Testing"])
	printfc(stdout,ConsoleColor.YELLOW()," The string in yellow")
	
	
class TestObject : Object

class CustomStringObject 

	block toString()
		return "[CustomStringObject:toString():it custom toString()]"
		
class NoToString
	
	num = 1 nim = 2

/*[obsolute]
block main_old() 
	print("\tHello World\n")
	println("it simple")
	println("Simple Inteligent and Modular Programming Language")
	lister = ["simple", "intelligent", "modular"]
	println(""+lengthOf(lister) + " "+ lister[1])
	print("Enter the minimum start : ") 
	minCount = readln()
	maxCount = readLine("Enter your max count : ")
	for i = minCount to maxCount
		printinLine("downloading : "+ i +"%") 
	end
	print("\nHolla we done counting "+minCount+" to "+maxCount)
	
	#the console color demo
	printWithBG(ConsoleColor.DARKBLUE(), " Hello Adewale in green\n")
	printWithFGBG(ConsoleColor.RED(), ConsoleColor.WHITE(), " Hello Adewale in green\n")
	setForeground(ConsoleColor.GREEN())
	colorPrintln("Hello")
	colorPrint(" Hello Adewale in green\n")
	resetColor()
	colorPrint(" Hello Adewale in default\n")
*/